name: Fetch Polymarket Data and Deploy

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  workflow_dispatch:
  push:
    branches: [ master ]

# Required for GitHub Pages deployment
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  fetch-data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        enable-cache: true

    - name: Install dependencies
      run: uv sync --frozen

    - name: Restore SQLite database cache
      uses: actions/cache/restore@v4
      with:
        path: markets.db
        key: markets-db-${{ github.run_id }}
        restore-keys: |
          markets-db-

    - name: Restore previous markets.json
      continue-on-error: true
      run: |
        # Download markets.json from GitHub Pages for statement caching
        BASE_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"

        echo "⏳ Downloading previous markets.json from GitHub Pages..."
        mkdir -p docs
        if curl -fsSL "$BASE_URL/markets.json" -o docs/markets.json 2>/dev/null; then
          MARKET_COUNT=$(grep -c '"question"' docs/markets.json || echo "unknown")
          echo "✅ Restored markets.json ($MARKET_COUNT markets)"
          echo "💡 Script will reuse statements for unchanged markets (saves LLM costs)"
        else
          echo "⚠️  No previous markets.json found (first run)"
        fi

    - name: Fetch market data
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      run: uv run python scripts/fetch_markets.py

    - name: Save SQLite database cache
      uses: actions/cache/save@v4
      if: always()
      with:
        path: markets.db
        key: markets-db-${{ github.run_id }}

    - name: Prepare deployment files
      run: |
        echo "📦 Deployment contents:"
        ls -lah docs/
        echo ""
        echo "📊 Artifact size:"
        du -sh docs

    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs

  deploy:
    needs: fetch-data
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
